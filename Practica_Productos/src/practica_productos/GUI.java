/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica_productos;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Isra
 */
public class GUI extends javax.swing.JFrame {
    int cantidad_p;
    DefaultTableModel model = new DefaultTableModel();
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista productos");
        setResizable(false);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable);

        jButton1.setText("GENERAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FRESCOS", "CONGELADOS", "REFRIGERADOS" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 69, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(691, 691, 691)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void resetTable(){
        model.setRowCount(0);
        model.setColumnCount(0);
        model.addColumn("LOTE");
        model.addColumn("FABRICANTE");
        model.addColumn("PRODUCTO");
        model.addColumn("PUBLICO");
        model.addColumn("MAYOREO");
        model.addColumn("CADUCIDAD");
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            this.cantidad_p=Integer.valueOf( this.jTextField1.getText() );
            switch(String.valueOf(this.jComboBox1.getSelectedItem())){
                case "FRESCOS":
                    this.resetTable();
                    
                    model.addColumn("ENVASADO");
                    model.addColumn("TRANSPORTE");
                    model.addColumn("ORIGEN");
                    model.addColumn("MAYOREO IVA");
                    model.addColumn("Prox. Caducir");
                    
                    Ops.generarFrescos(cantidad_p);
                    for(ProductoFresco pr : Ops.LISTA_FRESCOS){
                        model.addRow(new Object[]{
                            String.valueOf(pr.getLote()),
                            pr.getFabricante(),
                            pr.getNombre(),
                            Ops.DEC_FORMAT.format(pr.getCosto_p()),
                            Ops.DEC_FORMAT.format(pr.getCosto_m()),
                            Ops.DATE_FORMAT.format(pr.getCaducidad()),
                            Ops.DATE_FORMAT.format(pr.getEnvasado()),
                            pr.getOrigen(),pr.getTransporte(),
                            Ops.DEC_FORMAT.format(pr.costoIVA()),
                            pr.proximaCaducidad() ? "A CADUCAR" : "-"
                        });
                    }
                    this.jTable.setModel(this.model);
                    break;
                    
                case "CONGELADOS":
                    this.resetTable();
                    model.addColumn("TEMP REC");
                    model.addColumn("TEMP ACTUAL");
                    model.addColumn("ALERTA");
                    
                    Ops.generarCongelados(cantidad_p);
                    for(ProductoCongelado pr : Ops.LISTA_CONGELADOS){
                        model.addRow(new Object[]{
                            String.valueOf(pr.getLote()),
                            pr.getFabricante(),
                            pr.getNombre(),
                            Ops.DEC_FORMAT.format(pr.getCosto_p()),
                            Ops.DEC_FORMAT.format(pr.getCosto_m()),
                            Ops.DATE_FORMAT.format(pr.getCaducidad()),
                            "-"+String.valueOf(pr.getTemp_r())+"°",
                            "-"+String.valueOf(pr.getTemp_actual())+"°",
                            pr.inadecuada()?"ALERTA TEMP":"-"
                        });
                    }
                    
                    this.jTable.setModel(model);
                    break;
                    
                case "REFRIGERADOS":
                    this.resetTable();
                    model.addColumn("CODIGO");
                    model.addColumn("ALMACENADO");
                    model.addColumn("DIAS REFRIGERADO");
                    model.addColumn("IMP EXP");
                    model.addColumn("MAYOREO IVA");
                    
                    Ops.generarRefrigerados(cantidad_p);
                    for(ProductoRefrigerado pr : Ops.LISTA_REFRIGERADOS){
                        model.addRow(new Object[]{
                            String.valueOf(pr.getLote()),
                            pr.getFabricante(),
                            pr.getNombre(),
                            Ops.DEC_FORMAT.format(pr.getCosto_p()),
                            Ops.DEC_FORMAT.format(pr.getCosto_m()),
                            Ops.DATE_FORMAT.format(pr.getCaducidad()),
                            String.valueOf(pr.getCod_organismo()),
                            Ops.DATE_FORMAT.format(pr.getAlmacenado()),
                            String.valueOf(pr.diasRefrigerado()),
                            pr.getImp_exp(),
                            Ops.DEC_FORMAT.format(pr.mayoreoIVA()/20)+" USD"
                        });
                    }
                    this.jTable.setModel(model);
                    break;
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Indica una cantidad válida!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
